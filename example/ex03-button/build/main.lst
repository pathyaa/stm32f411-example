ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.gpioWrite,"ax",%progbits
  21              		.align	1
  22              		.global	gpioWrite
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	gpioWrite:
  28              	.LVL0:
  29              	.LFB134:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdbool.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** #define HIGH    1
  36:Core/Src/main.c **** #define LOW     0
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** enum
  59:Core/Src/main.c **** {
  60:Core/Src/main.c **** 	IDLE,
  61:Core/Src/main.c **** 	PRESSED_CHECK,
  62:Core/Src/main.c **** 	PRESSED,
  63:Core/Src/main.c **** 	RELEASED_CHECK,
  64:Core/Src/main.c **** 	RELEASED
  65:Core/Src/main.c **** };
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** enum
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   LED,
  70:Core/Src/main.c ****   BTN,
  71:Core/Src/main.c ****   GPIO_MAX
  72:Core/Src/main.c **** };
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** bool gpioWrite(uint8_t pin, uint8_t pin_state)
  75:Core/Src/main.c **** {
  30              		.loc 1 75 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 75 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  76:Core/Src/main.c ****   switch (pin)
  39              		.loc 1 76 3 is_stmt 1 view .LVU2
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 3


  40 0002 18B1     		cbz	r0, .L2
  41 0004 0128     		cmp	r0, #1
  42 0006 16D0     		beq	.L3
  43 0008 0020     		movs	r0, #0
  44              	.LVL1:
  45              	.L4:
  77:Core/Src/main.c ****   {
  78:Core/Src/main.c ****     
  79:Core/Src/main.c ****     case LED:
  80:Core/Src/main.c ****       if (pin_state == HIGH)
  81:Core/Src/main.c ****       {
  82:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  83:Core/Src/main.c ****         return true;
  84:Core/Src/main.c ****       }
  85:Core/Src/main.c ****       else if (pin_state == LOW)
  86:Core/Src/main.c ****       {
  87:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  88:Core/Src/main.c ****         return true;
  89:Core/Src/main.c ****       }
  90:Core/Src/main.c ****     break;
  91:Core/Src/main.c ****     case BTN:
  92:Core/Src/main.c ****       if (pin_state == HIGH)
  93:Core/Src/main.c ****       {
  94:Core/Src/main.c ****         HAL_GPIO_WritePin(BTN_GPIO_Port, BTN_Pin, GPIO_PIN_SET);
  95:Core/Src/main.c ****         return true;
  96:Core/Src/main.c ****       }
  97:Core/Src/main.c ****       else if (pin_state == LOW)
  98:Core/Src/main.c ****       {
  99:Core/Src/main.c ****         HAL_GPIO_WritePin(BTN_GPIO_Port, BTN_Pin, GPIO_PIN_RESET);
 100:Core/Src/main.c ****         return true;
 101:Core/Src/main.c ****       }
 102:Core/Src/main.c ****     break;
 103:Core/Src/main.c ****   }
 104:Core/Src/main.c ****   return false;
 105:Core/Src/main.c **** }
  46              		.loc 1 105 1 is_stmt 0 view .LVU3
  47 000a 08BD     		pop	{r3, pc}
  48              	.LVL2:
  49              	.L2:
  80:Core/Src/main.c ****       {
  50              		.loc 1 80 7 is_stmt 1 view .LVU4
  80:Core/Src/main.c ****       {
  51              		.loc 1 80 10 is_stmt 0 view .LVU5
  52 000c 0129     		cmp	r1, #1
  53 000e 02D0     		beq	.L10
  85:Core/Src/main.c ****       {
  54              		.loc 1 85 12 is_stmt 1 view .LVU6
  85:Core/Src/main.c ****       {
  55              		.loc 1 85 15 is_stmt 0 view .LVU7
  56 0010 49B1     		cbz	r1, .L11
 104:Core/Src/main.c **** }
  57              		.loc 1 104 10 view .LVU8
  58 0012 0020     		movs	r0, #0
  59              	.LVL3:
 104:Core/Src/main.c **** }
  60              		.loc 1 104 10 view .LVU9
  61 0014 F9E7     		b	.L4
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 4


  62              	.LVL4:
  63              	.L10:
  82:Core/Src/main.c ****         return true;
  64              		.loc 1 82 9 is_stmt 1 view .LVU10
  65 0016 0122     		movs	r2, #1
  66 0018 4FF40051 		mov	r1, #8192
  67              	.LVL5:
  82:Core/Src/main.c ****         return true;
  68              		.loc 1 82 9 is_stmt 0 view .LVU11
  69 001c 0F48     		ldr	r0, .L14
  70              	.LVL6:
  82:Core/Src/main.c ****         return true;
  71              		.loc 1 82 9 view .LVU12
  72 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL7:
  83:Core/Src/main.c ****       }
  74              		.loc 1 83 9 is_stmt 1 view .LVU13
  83:Core/Src/main.c ****       }
  75              		.loc 1 83 16 is_stmt 0 view .LVU14
  76 0022 0120     		movs	r0, #1
  77 0024 F1E7     		b	.L4
  78              	.LVL8:
  79              	.L11:
  87:Core/Src/main.c ****         return true;
  80              		.loc 1 87 9 is_stmt 1 view .LVU15
  81 0026 0022     		movs	r2, #0
  82 0028 4FF40051 		mov	r1, #8192
  83              	.LVL9:
  87:Core/Src/main.c ****         return true;
  84              		.loc 1 87 9 is_stmt 0 view .LVU16
  85 002c 0B48     		ldr	r0, .L14
  86              	.LVL10:
  87:Core/Src/main.c ****         return true;
  87              		.loc 1 87 9 view .LVU17
  88 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL11:
  88:Core/Src/main.c ****       }
  90              		.loc 1 88 9 is_stmt 1 view .LVU18
  88:Core/Src/main.c ****       }
  91              		.loc 1 88 16 is_stmt 0 view .LVU19
  92 0032 0120     		movs	r0, #1
  93 0034 E9E7     		b	.L4
  94              	.LVL12:
  95              	.L3:
  92:Core/Src/main.c ****       {
  96              		.loc 1 92 7 is_stmt 1 view .LVU20
  92:Core/Src/main.c ****       {
  97              		.loc 1 92 10 is_stmt 0 view .LVU21
  98 0036 0129     		cmp	r1, #1
  99 0038 02D0     		beq	.L12
  97:Core/Src/main.c ****       {
 100              		.loc 1 97 12 is_stmt 1 view .LVU22
  97:Core/Src/main.c ****       {
 101              		.loc 1 97 15 is_stmt 0 view .LVU23
 102 003a 41B1     		cbz	r1, .L13
 104:Core/Src/main.c **** }
 103              		.loc 1 104 10 view .LVU24
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 5


 104 003c 0020     		movs	r0, #0
 105              	.LVL13:
 104:Core/Src/main.c **** }
 106              		.loc 1 104 10 view .LVU25
 107 003e E4E7     		b	.L4
 108              	.LVL14:
 109              	.L12:
  94:Core/Src/main.c ****         return true;
 110              		.loc 1 94 9 is_stmt 1 view .LVU26
 111 0040 0122     		movs	r2, #1
 112 0042 1146     		mov	r1, r2
 113              	.LVL15:
  94:Core/Src/main.c ****         return true;
 114              		.loc 1 94 9 is_stmt 0 view .LVU27
 115 0044 0648     		ldr	r0, .L14+4
 116              	.LVL16:
  94:Core/Src/main.c ****         return true;
 117              		.loc 1 94 9 view .LVU28
 118 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL17:
  95:Core/Src/main.c ****       }
 120              		.loc 1 95 9 is_stmt 1 view .LVU29
  95:Core/Src/main.c ****       }
 121              		.loc 1 95 16 is_stmt 0 view .LVU30
 122 004a 0120     		movs	r0, #1
 123 004c DDE7     		b	.L4
 124              	.LVL18:
 125              	.L13:
  99:Core/Src/main.c ****         return true;
 126              		.loc 1 99 9 is_stmt 1 view .LVU31
 127 004e 0022     		movs	r2, #0
 128 0050 0121     		movs	r1, #1
 129              	.LVL19:
  99:Core/Src/main.c ****         return true;
 130              		.loc 1 99 9 is_stmt 0 view .LVU32
 131 0052 0348     		ldr	r0, .L14+4
 132              	.LVL20:
  99:Core/Src/main.c ****         return true;
 133              		.loc 1 99 9 view .LVU33
 134 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 135              	.LVL21:
 100:Core/Src/main.c ****       }
 136              		.loc 1 100 9 is_stmt 1 view .LVU34
 100:Core/Src/main.c ****       }
 137              		.loc 1 100 16 is_stmt 0 view .LVU35
 138 0058 0120     		movs	r0, #1
 139 005a D6E7     		b	.L4
 140              	.L15:
 141              		.align	2
 142              	.L14:
 143 005c 00080240 		.word	1073874944
 144 0060 00000240 		.word	1073872896
 145              		.cfi_endproc
 146              	.LFE134:
 148              		.section	.text.gpioRead,"ax",%progbits
 149              		.align	1
 150              		.global	gpioRead
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 6


 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	gpioRead:
 156              	.LVL22:
 157              	.LFB135:
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** bool gpioRead(uint8_t pin)
 108:Core/Src/main.c **** {
 158              		.loc 1 108 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		.loc 1 108 1 is_stmt 0 view .LVU37
 163 0000 08B5     		push	{r3, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 3, -8
 166              		.cfi_offset 14, -4
 109:Core/Src/main.c ****   bool ret = false;
 167              		.loc 1 109 3 is_stmt 1 view .LVU38
 168              	.LVL23:
 110:Core/Src/main.c ****   switch (pin)
 169              		.loc 1 110 3 view .LVU39
 170 0002 18B1     		cbz	r0, .L17
 171 0004 0128     		cmp	r0, #1
 172 0006 11D0     		beq	.L18
 173 0008 0020     		movs	r0, #0
 174              	.LVL24:
 175              	.L19:
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     case LED:
 113:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(LED_GPIO_Port, LED_Pin) == GPIO_PIN_SET)
 114:Core/Src/main.c ****     {
 115:Core/Src/main.c ****       ret = HIGH;
 116:Core/Src/main.c ****     }
 117:Core/Src/main.c ****     else if (HAL_GPIO_ReadPin(LED_GPIO_Port, LED_Pin) == GPIO_PIN_RESET)
 118:Core/Src/main.c ****     {
 119:Core/Src/main.c ****       ret = LOW;
 120:Core/Src/main.c ****     }
 121:Core/Src/main.c ****     break;
 122:Core/Src/main.c ****     case BTN:
 123:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(BTN_GPIO_Port, BTN_Pin) == GPIO_PIN_SET)
 124:Core/Src/main.c ****     {
 125:Core/Src/main.c ****       ret = HIGH;
 126:Core/Src/main.c ****     }
 127:Core/Src/main.c ****     else if (HAL_GPIO_ReadPin(BTN_GPIO_Port, BTN_Pin) == GPIO_PIN_RESET)
 128:Core/Src/main.c ****     {
 129:Core/Src/main.c ****       ret = LOW;
 130:Core/Src/main.c ****     }
 131:Core/Src/main.c ****     break;
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c ****   return ret;
 176              		.loc 1 133 3 view .LVU40
 134:Core/Src/main.c **** }
 177              		.loc 1 134 1 is_stmt 0 view .LVU41
 178 000a 08BD     		pop	{r3, pc}
 179              	.LVL25:
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 7


 180              	.L17:
 113:Core/Src/main.c ****     {
 181              		.loc 1 113 5 is_stmt 1 view .LVU42
 113:Core/Src/main.c ****     {
 182              		.loc 1 113 9 is_stmt 0 view .LVU43
 183 000c 4FF40051 		mov	r1, #8192
 184 0010 0D48     		ldr	r0, .L25
 185              	.LVL26:
 113:Core/Src/main.c ****     {
 186              		.loc 1 113 9 view .LVU44
 187 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 188              	.LVL27:
 113:Core/Src/main.c ****     {
 189              		.loc 1 113 8 discriminator 1 view .LVU45
 190 0016 0128     		cmp	r0, #1
 191 0018 01D1     		bne	.L23
 115:Core/Src/main.c ****     }
 192              		.loc 1 115 11 view .LVU46
 193 001a 0120     		movs	r0, #1
 194 001c F5E7     		b	.L19
 195              	.L23:
 117:Core/Src/main.c ****     {
 196              		.loc 1 117 10 is_stmt 1 view .LVU47
 117:Core/Src/main.c ****     {
 197              		.loc 1 117 14 is_stmt 0 view .LVU48
 198 001e 4FF40051 		mov	r1, #8192
 199 0022 0948     		ldr	r0, .L25
 200 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201              	.LVL28:
 119:Core/Src/main.c ****     }
 202              		.loc 1 119 7 is_stmt 1 view .LVU49
 109:Core/Src/main.c ****   switch (pin)
 203              		.loc 1 109 8 is_stmt 0 view .LVU50
 204 0028 0020     		movs	r0, #0
 205 002a EEE7     		b	.L19
 206              	.LVL29:
 207              	.L18:
 123:Core/Src/main.c ****     {
 208              		.loc 1 123 5 is_stmt 1 view .LVU51
 123:Core/Src/main.c ****     {
 209              		.loc 1 123 9 is_stmt 0 view .LVU52
 210 002c 0121     		movs	r1, #1
 211 002e 0748     		ldr	r0, .L25+4
 212              	.LVL30:
 123:Core/Src/main.c ****     {
 213              		.loc 1 123 9 view .LVU53
 214 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 215              	.LVL31:
 123:Core/Src/main.c ****     {
 216              		.loc 1 123 8 discriminator 1 view .LVU54
 217 0034 0128     		cmp	r0, #1
 218 0036 01D1     		bne	.L24
 125:Core/Src/main.c ****     }
 219              		.loc 1 125 11 view .LVU55
 220 0038 0120     		movs	r0, #1
 221 003a E6E7     		b	.L19
 222              	.L24:
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 8


 127:Core/Src/main.c ****     {
 223              		.loc 1 127 10 is_stmt 1 view .LVU56
 127:Core/Src/main.c ****     {
 224              		.loc 1 127 14 is_stmt 0 view .LVU57
 225 003c 0121     		movs	r1, #1
 226 003e 0348     		ldr	r0, .L25+4
 227 0040 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 228              	.LVL32:
 129:Core/Src/main.c ****     }
 229              		.loc 1 129 7 is_stmt 1 view .LVU58
 109:Core/Src/main.c ****   switch (pin)
 230              		.loc 1 109 8 is_stmt 0 view .LVU59
 231 0044 0020     		movs	r0, #0
 232 0046 E0E7     		b	.L19
 233              	.L26:
 234              		.align	2
 235              	.L25:
 236 0048 00080240 		.word	1073874944
 237 004c 00000240 		.word	1073872896
 238              		.cfi_endproc
 239              	.LFE135:
 241              		.section	.text.isButtonClicked,"ax",%progbits
 242              		.align	1
 243              		.global	isButtonClicked
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	isButtonClicked:
 249              	.LFB136:
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** bool isButtonClicked(void)
 137:Core/Src/main.c **** {
 250              		.loc 1 137 1 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254 0000 38B5     		push	{r3, r4, r5, lr}
 255              		.cfi_def_cfa_offset 16
 256              		.cfi_offset 3, -16
 257              		.cfi_offset 4, -12
 258              		.cfi_offset 5, -8
 259              		.cfi_offset 14, -4
 138:Core/Src/main.c ****   static uint8_t step = 0;
 260              		.loc 1 138 3 view .LVU61
 139:Core/Src/main.c ****   static uint32_t tick = 0;
 261              		.loc 1 139 3 view .LVU62
 140:Core/Src/main.c ****   static bool isPressed = false;
 262              		.loc 1 140 3 view .LVU63
 141:Core/Src/main.c ****   bool ret = false;
 263              		.loc 1 141 3 view .LVU64
 264              	.LVL33:
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   switch (step)
 265              		.loc 1 143 3 view .LVU65
 266 0002 4A4B     		ldr	r3, .L47
 267 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268 0006 042B     		cmp	r3, #4
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 9


 269 0008 00F28C80 		bhi	.L40
 270 000c DFE803F0 		tbb	[pc, r3]
 271              	.L30:
 272 0010 03       		.byte	(.L34-.L30)/2
 273 0011 20       		.byte	(.L33-.L30)/2
 274 0012 3E       		.byte	(.L32-.L30)/2
 275 0013 4D       		.byte	(.L31-.L30)/2
 276 0014 84       		.byte	(.L29-.L30)/2
 277 0015 00       		.p2align 1
 278              	.L34:
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     case IDLE:
 146:Core/Src/main.c ****       if (gpioRead(BTN) == HIGH)
 279              		.loc 1 146 7 view .LVU66
 280              		.loc 1 146 11 is_stmt 0 view .LVU67
 281 0016 0120     		movs	r0, #1
 282 0018 FFF7FEFF 		bl	gpioRead
 283              	.LVL34:
 284              		.loc 1 146 10 discriminator 1 view .LVU68
 285 001c 0446     		mov	r4, r0
 286 001e 40B1     		cbz	r0, .L35
 147:Core/Src/main.c ****       {
 148:Core/Src/main.c ****         step = RELEASED_CHECK;
 287              		.loc 1 148 9 is_stmt 1 view .LVU69
 288              		.loc 1 148 14 is_stmt 0 view .LVU70
 289 0020 424B     		ldr	r3, .L47
 290 0022 0322     		movs	r2, #3
 291 0024 1A70     		strb	r2, [r3]
 149:Core/Src/main.c ****         tick = HAL_GetTick();
 292              		.loc 1 149 9 is_stmt 1 view .LVU71
 293              		.loc 1 149 16 is_stmt 0 view .LVU72
 294 0026 FFF7FEFF 		bl	HAL_GetTick
 295              	.LVL35:
 296              		.loc 1 149 14 discriminator 1 view .LVU73
 297 002a 414B     		ldr	r3, .L47+4
 298 002c 1860     		str	r0, [r3]
 141:Core/Src/main.c **** 
 299              		.loc 1 141 8 view .LVU74
 300 002e 0024     		movs	r4, #0
 301 0030 76E0     		b	.L28
 302              	.L35:
 150:Core/Src/main.c ****       }
 151:Core/Src/main.c ****       else if (gpioRead(BTN) == LOW)
 303              		.loc 1 151 12 is_stmt 1 view .LVU75
 304              		.loc 1 151 16 is_stmt 0 view .LVU76
 305 0032 0120     		movs	r0, #1
 306 0034 FFF7FEFF 		bl	gpioRead
 307              	.LVL36:
 308              		.loc 1 151 15 discriminator 1 view .LVU77
 309 0038 0546     		mov	r5, r0
 310 003a 0028     		cmp	r0, #0
 311 003c 70D1     		bne	.L28
 152:Core/Src/main.c ****       {
 153:Core/Src/main.c ****         tick = HAL_GetTick();
 312              		.loc 1 153 9 is_stmt 1 view .LVU78
 313              		.loc 1 153 16 is_stmt 0 view .LVU79
 314 003e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 10


 315              	.LVL37:
 316              		.loc 1 153 14 discriminator 1 view .LVU80
 317 0042 3B4B     		ldr	r3, .L47+4
 318 0044 1860     		str	r0, [r3]
 154:Core/Src/main.c ****         step = PRESSED_CHECK;
 319              		.loc 1 154 9 is_stmt 1 view .LVU81
 320              		.loc 1 154 14 is_stmt 0 view .LVU82
 321 0046 394B     		ldr	r3, .L47
 322 0048 0122     		movs	r2, #1
 323 004a 1A70     		strb	r2, [r3]
 141:Core/Src/main.c **** 
 324              		.loc 1 141 8 view .LVU83
 325 004c 2C46     		mov	r4, r5
 326 004e 67E0     		b	.L28
 327              	.L33:
 155:Core/Src/main.c ****       }
 156:Core/Src/main.c ****     break;
 157:Core/Src/main.c ****     case PRESSED_CHECK:
 158:Core/Src/main.c ****     if (HAL_GetTick() - tick >= 20)
 328              		.loc 1 158 5 is_stmt 1 view .LVU84
 329              		.loc 1 158 9 is_stmt 0 view .LVU85
 330 0050 FFF7FEFF 		bl	HAL_GetTick
 331              	.LVL38:
 332              		.loc 1 158 23 discriminator 1 view .LVU86
 333 0054 364B     		ldr	r3, .L47+4
 334 0056 1B68     		ldr	r3, [r3]
 335 0058 C01A     		subs	r0, r0, r3
 336              		.loc 1 158 8 discriminator 1 view .LVU87
 337 005a 1328     		cmp	r0, #19
 338 005c 01D8     		bhi	.L45
 141:Core/Src/main.c **** 
 339              		.loc 1 141 8 view .LVU88
 340 005e 0024     		movs	r4, #0
 341 0060 5EE0     		b	.L28
 342              	.L45:
 159:Core/Src/main.c ****     {
 160:Core/Src/main.c ****       if (gpioRead(BTN) == LOW)
 343              		.loc 1 160 7 is_stmt 1 view .LVU89
 344              		.loc 1 160 11 is_stmt 0 view .LVU90
 345 0062 0120     		movs	r0, #1
 346 0064 FFF7FEFF 		bl	gpioRead
 347              	.LVL39:
 348              		.loc 1 160 10 discriminator 1 view .LVU91
 349 0068 0446     		mov	r4, r0
 350 006a 30B9     		cbnz	r0, .L36
 161:Core/Src/main.c ****       {
 162:Core/Src/main.c ****         isPressed = true;
 351              		.loc 1 162 9 is_stmt 1 view .LVU92
 352              		.loc 1 162 19 is_stmt 0 view .LVU93
 353 006c 314B     		ldr	r3, .L47+8
 354 006e 0122     		movs	r2, #1
 355 0070 1A70     		strb	r2, [r3]
 163:Core/Src/main.c ****         step = PRESSED;
 356              		.loc 1 163 9 is_stmt 1 view .LVU94
 357              		.loc 1 163 14 is_stmt 0 view .LVU95
 358 0072 2E4B     		ldr	r3, .L47
 359 0074 0222     		movs	r2, #2
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 11


 360 0076 1A70     		strb	r2, [r3]
 361 0078 52E0     		b	.L28
 362              	.L36:
 164:Core/Src/main.c ****       }
 165:Core/Src/main.c ****       else
 166:Core/Src/main.c ****       {
 167:Core/Src/main.c ****         step = RELEASED_CHECK;
 363              		.loc 1 167 9 is_stmt 1 view .LVU96
 364              		.loc 1 167 14 is_stmt 0 view .LVU97
 365 007a 2C4B     		ldr	r3, .L47
 366 007c 0322     		movs	r2, #3
 367 007e 1A70     		strb	r2, [r3]
 168:Core/Src/main.c ****         tick = HAL_GetTick();
 368              		.loc 1 168 9 is_stmt 1 view .LVU98
 369              		.loc 1 168 16 is_stmt 0 view .LVU99
 370 0080 FFF7FEFF 		bl	HAL_GetTick
 371              	.LVL40:
 372              		.loc 1 168 14 discriminator 1 view .LVU100
 373 0084 2A4B     		ldr	r3, .L47+4
 374 0086 1860     		str	r0, [r3]
 141:Core/Src/main.c **** 
 375              		.loc 1 141 8 view .LVU101
 376 0088 0024     		movs	r4, #0
 377 008a 49E0     		b	.L28
 378              	.L32:
 169:Core/Src/main.c ****       }
 170:Core/Src/main.c ****     }
 171:Core/Src/main.c ****     break;
 172:Core/Src/main.c ****     case PRESSED:
 173:Core/Src/main.c ****     if (gpioRead(BTN) == HIGH)
 379              		.loc 1 173 5 is_stmt 1 view .LVU102
 380              		.loc 1 173 9 is_stmt 0 view .LVU103
 381 008c 0120     		movs	r0, #1
 382 008e FFF7FEFF 		bl	gpioRead
 383              	.LVL41:
 384              		.loc 1 173 8 discriminator 1 view .LVU104
 385 0092 0446     		mov	r4, r0
 386 0094 0028     		cmp	r0, #0
 387 0096 43D0     		beq	.L28
 174:Core/Src/main.c ****     {
 175:Core/Src/main.c ****       tick = HAL_GetTick();
 388              		.loc 1 175 7 is_stmt 1 view .LVU105
 389              		.loc 1 175 14 is_stmt 0 view .LVU106
 390 0098 FFF7FEFF 		bl	HAL_GetTick
 391              	.LVL42:
 392              		.loc 1 175 12 discriminator 1 view .LVU107
 393 009c 244B     		ldr	r3, .L47+4
 394 009e 1860     		str	r0, [r3]
 176:Core/Src/main.c ****       step = RELEASED_CHECK;
 395              		.loc 1 176 7 is_stmt 1 view .LVU108
 396              		.loc 1 176 12 is_stmt 0 view .LVU109
 397 00a0 224B     		ldr	r3, .L47
 398 00a2 0322     		movs	r2, #3
 399 00a4 1A70     		strb	r2, [r3]
 141:Core/Src/main.c **** 
 400              		.loc 1 141 8 view .LVU110
 401 00a6 0024     		movs	r4, #0
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 12


 402 00a8 3AE0     		b	.L28
 403              	.L31:
 177:Core/Src/main.c ****     }
 178:Core/Src/main.c ****     break;
 179:Core/Src/main.c ****     case RELEASED_CHECK:
 180:Core/Src/main.c ****     if (HAL_GetTick() - tick >= 20)
 404              		.loc 1 180 5 is_stmt 1 view .LVU111
 405              		.loc 1 180 9 is_stmt 0 view .LVU112
 406 00aa FFF7FEFF 		bl	HAL_GetTick
 407              	.LVL43:
 408              		.loc 1 180 23 discriminator 1 view .LVU113
 409 00ae 204B     		ldr	r3, .L47+4
 410 00b0 1B68     		ldr	r3, [r3]
 411 00b2 C01A     		subs	r0, r0, r3
 412              		.loc 1 180 8 discriminator 1 view .LVU114
 413 00b4 1328     		cmp	r0, #19
 414 00b6 37D9     		bls	.L42
 181:Core/Src/main.c ****     {
 182:Core/Src/main.c ****       if (!isPressed)
 415              		.loc 1 182 7 is_stmt 1 view .LVU115
 416              		.loc 1 182 11 is_stmt 0 view .LVU116
 417 00b8 1E4B     		ldr	r3, .L47+8
 418 00ba 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 419              		.loc 1 182 10 view .LVU117
 420 00bc BCB9     		cbnz	r4, .L37
 183:Core/Src/main.c ****       {
 184:Core/Src/main.c ****         if (gpioRead(BTN) == HIGH)
 421              		.loc 1 184 9 is_stmt 1 view .LVU118
 422              		.loc 1 184 13 is_stmt 0 view .LVU119
 423 00be 0120     		movs	r0, #1
 424 00c0 FFF7FEFF 		bl	gpioRead
 425              	.LVL44:
 426              		.loc 1 184 12 discriminator 1 view .LVU120
 427 00c4 0546     		mov	r5, r0
 428 00c6 18B1     		cbz	r0, .L38
 185:Core/Src/main.c ****         {
 186:Core/Src/main.c ****           step = IDLE;
 429              		.loc 1 186 11 is_stmt 1 view .LVU121
 430              		.loc 1 186 16 is_stmt 0 view .LVU122
 431 00c8 184B     		ldr	r3, .L47
 432 00ca 0022     		movs	r2, #0
 433 00cc 1A70     		strb	r2, [r3]
 434 00ce 27E0     		b	.L28
 435              	.L38:
 187:Core/Src/main.c ****         }
 188:Core/Src/main.c ****         else if (gpioRead(BTN) == LOW)
 436              		.loc 1 188 14 is_stmt 1 view .LVU123
 437              		.loc 1 188 18 is_stmt 0 view .LVU124
 438 00d0 0120     		movs	r0, #1
 439 00d2 FFF7FEFF 		bl	gpioRead
 440              	.LVL45:
 441              		.loc 1 188 17 discriminator 1 view .LVU125
 442 00d6 0446     		mov	r4, r0
 443 00d8 08B1     		cbz	r0, .L46
 141:Core/Src/main.c **** 
 444              		.loc 1 141 8 view .LVU126
 445 00da 2C46     		mov	r4, r5
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 13


 446 00dc 20E0     		b	.L28
 447              	.L46:
 189:Core/Src/main.c ****         {
 190:Core/Src/main.c ****           tick = HAL_GetTick();
 448              		.loc 1 190 11 is_stmt 1 view .LVU127
 449              		.loc 1 190 18 is_stmt 0 view .LVU128
 450 00de FFF7FEFF 		bl	HAL_GetTick
 451              	.LVL46:
 452              		.loc 1 190 16 discriminator 1 view .LVU129
 453 00e2 134B     		ldr	r3, .L47+4
 454 00e4 1860     		str	r0, [r3]
 191:Core/Src/main.c ****           step = PRESSED_CHECK;
 455              		.loc 1 191 11 is_stmt 1 view .LVU130
 456              		.loc 1 191 16 is_stmt 0 view .LVU131
 457 00e6 114B     		ldr	r3, .L47
 458 00e8 0122     		movs	r2, #1
 459 00ea 1A70     		strb	r2, [r3]
 460 00ec 18E0     		b	.L28
 461              	.L37:
 192:Core/Src/main.c ****         }
 193:Core/Src/main.c ****       }
 194:Core/Src/main.c ****       else 
 195:Core/Src/main.c ****       {
 196:Core/Src/main.c ****         isPressed = false;
 462              		.loc 1 196 9 is_stmt 1 view .LVU132
 463              		.loc 1 196 19 is_stmt 0 view .LVU133
 464 00ee 114B     		ldr	r3, .L47+8
 465 00f0 0022     		movs	r2, #0
 466 00f2 1A70     		strb	r2, [r3]
 197:Core/Src/main.c ****         if (gpioRead(BTN) == HIGH)
 467              		.loc 1 197 9 is_stmt 1 view .LVU134
 468              		.loc 1 197 13 is_stmt 0 view .LVU135
 469 00f4 0120     		movs	r0, #1
 470 00f6 FFF7FEFF 		bl	gpioRead
 471              	.LVL47:
 472              		.loc 1 197 12 discriminator 1 view .LVU136
 473 00fa 0446     		mov	r4, r0
 474 00fc 20B1     		cbz	r0, .L39
 198:Core/Src/main.c ****         {
 199:Core/Src/main.c ****           step = RELEASED;
 475              		.loc 1 199 11 is_stmt 1 view .LVU137
 476              		.loc 1 199 16 is_stmt 0 view .LVU138
 477 00fe 0B4B     		ldr	r3, .L47
 478 0100 0422     		movs	r2, #4
 479 0102 1A70     		strb	r2, [r3]
 141:Core/Src/main.c **** 
 480              		.loc 1 141 8 view .LVU139
 481 0104 0024     		movs	r4, #0
 482 0106 0BE0     		b	.L28
 483              	.L39:
 200:Core/Src/main.c ****         }
 201:Core/Src/main.c ****         else
 202:Core/Src/main.c ****         {
 203:Core/Src/main.c ****           tick = HAL_GetTick();
 484              		.loc 1 203 11 is_stmt 1 view .LVU140
 485              		.loc 1 203 18 is_stmt 0 view .LVU141
 486 0108 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 14


 487              	.LVL48:
 488              		.loc 1 203 16 discriminator 1 view .LVU142
 489 010c 084B     		ldr	r3, .L47+4
 490 010e 1860     		str	r0, [r3]
 204:Core/Src/main.c ****           step = PRESSED_CHECK;
 491              		.loc 1 204 11 is_stmt 1 view .LVU143
 492              		.loc 1 204 16 is_stmt 0 view .LVU144
 493 0110 064B     		ldr	r3, .L47
 494 0112 0122     		movs	r2, #1
 495 0114 1A70     		strb	r2, [r3]
 496 0116 03E0     		b	.L28
 497              	.L29:
 205:Core/Src/main.c ****         }
 206:Core/Src/main.c ****       }
 207:Core/Src/main.c ****       
 208:Core/Src/main.c ****     }
 209:Core/Src/main.c ****     break;
 210:Core/Src/main.c ****     case RELEASED:
 211:Core/Src/main.c ****     step = IDLE;
 498              		.loc 1 211 5 is_stmt 1 view .LVU145
 499              		.loc 1 211 10 is_stmt 0 view .LVU146
 500 0118 044B     		ldr	r3, .L47
 501 011a 0022     		movs	r2, #0
 502 011c 1A70     		strb	r2, [r3]
 212:Core/Src/main.c ****     ret = true;
 503              		.loc 1 212 5 is_stmt 1 view .LVU147
 504              	.LVL49:
 213:Core/Src/main.c ****     break;
 505              		.loc 1 213 5 view .LVU148
 212:Core/Src/main.c ****     ret = true;
 506              		.loc 1 212 9 is_stmt 0 view .LVU149
 507 011e 0124     		movs	r4, #1
 508              	.LVL50:
 509              	.L28:
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c ****   return ret;
 510              		.loc 1 215 3 is_stmt 1 view .LVU150
 216:Core/Src/main.c **** }
 511              		.loc 1 216 1 is_stmt 0 view .LVU151
 512 0120 2046     		mov	r0, r4
 513 0122 38BD     		pop	{r3, r4, r5, pc}
 514              	.LVL51:
 515              	.L40:
 143:Core/Src/main.c ****   {
 516              		.loc 1 143 3 view .LVU152
 517 0124 0024     		movs	r4, #0
 518 0126 FBE7     		b	.L28
 519              	.L42:
 141:Core/Src/main.c **** 
 520              		.loc 1 141 8 view .LVU153
 521 0128 0024     		movs	r4, #0
 522 012a F9E7     		b	.L28
 523              	.L48:
 524              		.align	2
 525              	.L47:
 526 012c 00000000 		.word	step.2
 527 0130 00000000 		.word	tick.1
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 15


 528 0134 00000000 		.word	isPressed.0
 529              		.cfi_endproc
 530              	.LFE136:
 532              		.section	.text.gpioToggle,"ax",%progbits
 533              		.align	1
 534              		.global	gpioToggle
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 539              	gpioToggle:
 540              	.LVL52:
 541              	.LFB137:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** bool gpioToggle(uint8_t pin)
 219:Core/Src/main.c **** {
 542              		.loc 1 219 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		.loc 1 219 1 is_stmt 0 view .LVU155
 547 0000 10B5     		push	{r4, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 4, -8
 550              		.cfi_offset 14, -4
 220:Core/Src/main.c ****   bool ret = false;
 551              		.loc 1 220 3 is_stmt 1 view .LVU156
 552              	.LVL53:
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   switch (pin)
 553              		.loc 1 222 3 view .LVU157
 554 0002 20B1     		cbz	r0, .L50
 555 0004 0128     		cmp	r0, #1
 556 0006 16D0     		beq	.L51
 557 0008 0024     		movs	r4, #0
 558              	.LVL54:
 559              	.L52:
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     case LED:
 225:Core/Src/main.c ****     if (gpioRead(LED) == HIGH)
 226:Core/Src/main.c ****     {
 227:Core/Src/main.c ****       gpioWrite(LED, LOW);
 228:Core/Src/main.c ****       ret = true;
 229:Core/Src/main.c ****     }
 230:Core/Src/main.c ****     else if (gpioRead(LED) == LOW)
 231:Core/Src/main.c ****     {
 232:Core/Src/main.c ****       gpioWrite(LED, HIGH);
 233:Core/Src/main.c ****       ret = true;
 234:Core/Src/main.c ****     }
 235:Core/Src/main.c ****     break;
 236:Core/Src/main.c ****     case BTN:
 237:Core/Src/main.c ****     if (gpioRead(BTN) == HIGH)
 238:Core/Src/main.c ****     {
 239:Core/Src/main.c ****       gpioWrite(BTN, LOW);
 240:Core/Src/main.c ****       ret = true;
 241:Core/Src/main.c ****     }
 242:Core/Src/main.c ****     else if (gpioRead(BTN) == LOW)
 243:Core/Src/main.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 16


 244:Core/Src/main.c ****       gpioWrite(BTN, HIGH);
 245:Core/Src/main.c ****       ret = true;
 246:Core/Src/main.c ****     }
 247:Core/Src/main.c ****     break;
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c ****   return ret;
 560              		.loc 1 249 3 view .LVU158
 250:Core/Src/main.c **** }
 561              		.loc 1 250 1 is_stmt 0 view .LVU159
 562 000a 2046     		mov	r0, r4
 563 000c 10BD     		pop	{r4, pc}
 564              	.LVL55:
 565              	.L50:
 225:Core/Src/main.c ****     {
 566              		.loc 1 225 5 is_stmt 1 view .LVU160
 225:Core/Src/main.c ****     {
 567              		.loc 1 225 9 is_stmt 0 view .LVU161
 568 000e 0020     		movs	r0, #0
 569              	.LVL56:
 225:Core/Src/main.c ****     {
 570              		.loc 1 225 9 view .LVU162
 571 0010 FFF7FEFF 		bl	gpioRead
 572              	.LVL57:
 225:Core/Src/main.c ****     {
 573              		.loc 1 225 8 discriminator 1 view .LVU163
 574 0014 0446     		mov	r4, r0
 575 0016 20B1     		cbz	r0, .L53
 227:Core/Src/main.c ****       ret = true;
 576              		.loc 1 227 7 is_stmt 1 view .LVU164
 577 0018 0021     		movs	r1, #0
 578 001a 0846     		mov	r0, r1
 579 001c FFF7FEFF 		bl	gpioWrite
 580              	.LVL58:
 228:Core/Src/main.c ****     }
 581              		.loc 1 228 7 view .LVU165
 228:Core/Src/main.c ****     }
 582              		.loc 1 228 7 is_stmt 0 view .LVU166
 583 0020 F3E7     		b	.L52
 584              	.LVL59:
 585              	.L53:
 230:Core/Src/main.c ****     {
 586              		.loc 1 230 10 is_stmt 1 view .LVU167
 230:Core/Src/main.c ****     {
 587              		.loc 1 230 14 is_stmt 0 view .LVU168
 588 0022 0020     		movs	r0, #0
 589 0024 FFF7FEFF 		bl	gpioRead
 590              	.LVL60:
 230:Core/Src/main.c ****     {
 591              		.loc 1 230 13 discriminator 1 view .LVU169
 592 0028 0028     		cmp	r0, #0
 593 002a EED1     		bne	.L52
 232:Core/Src/main.c ****       ret = true;
 594              		.loc 1 232 7 is_stmt 1 view .LVU170
 595 002c 0121     		movs	r1, #1
 596 002e FFF7FEFF 		bl	gpioWrite
 597              	.LVL61:
 233:Core/Src/main.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 17


 598              		.loc 1 233 7 view .LVU171
 233:Core/Src/main.c ****     }
 599              		.loc 1 233 11 is_stmt 0 view .LVU172
 600 0032 0124     		movs	r4, #1
 601 0034 E9E7     		b	.L52
 602              	.LVL62:
 603              	.L51:
 237:Core/Src/main.c ****     {
 604              		.loc 1 237 5 is_stmt 1 view .LVU173
 237:Core/Src/main.c ****     {
 605              		.loc 1 237 9 is_stmt 0 view .LVU174
 606 0036 0120     		movs	r0, #1
 607              	.LVL63:
 237:Core/Src/main.c ****     {
 608              		.loc 1 237 9 view .LVU175
 609 0038 FFF7FEFF 		bl	gpioRead
 610              	.LVL64:
 237:Core/Src/main.c ****     {
 611              		.loc 1 237 8 discriminator 1 view .LVU176
 612 003c 0446     		mov	r4, r0
 613 003e 20B1     		cbz	r0, .L54
 239:Core/Src/main.c ****       ret = true;
 614              		.loc 1 239 7 is_stmt 1 view .LVU177
 615 0040 0021     		movs	r1, #0
 616 0042 0120     		movs	r0, #1
 617 0044 FFF7FEFF 		bl	gpioWrite
 618              	.LVL65:
 240:Core/Src/main.c ****     }
 619              		.loc 1 240 7 view .LVU178
 240:Core/Src/main.c ****     }
 620              		.loc 1 240 7 is_stmt 0 view .LVU179
 621 0048 DFE7     		b	.L52
 622              	.LVL66:
 623              	.L54:
 242:Core/Src/main.c ****     {
 624              		.loc 1 242 10 is_stmt 1 view .LVU180
 242:Core/Src/main.c ****     {
 625              		.loc 1 242 14 is_stmt 0 view .LVU181
 626 004a 0120     		movs	r0, #1
 627 004c FFF7FEFF 		bl	gpioRead
 628              	.LVL67:
 242:Core/Src/main.c ****     {
 629              		.loc 1 242 13 discriminator 1 view .LVU182
 630 0050 0028     		cmp	r0, #0
 631 0052 DAD1     		bne	.L52
 244:Core/Src/main.c ****       ret = true;
 632              		.loc 1 244 7 is_stmt 1 view .LVU183
 633 0054 0121     		movs	r1, #1
 634 0056 0846     		mov	r0, r1
 635 0058 FFF7FEFF 		bl	gpioWrite
 636              	.LVL68:
 245:Core/Src/main.c ****     }
 637              		.loc 1 245 7 view .LVU184
 245:Core/Src/main.c ****     }
 638              		.loc 1 245 11 is_stmt 0 view .LVU185
 639 005c 0124     		movs	r4, #1
 640 005e D4E7     		b	.L52
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 18


 641              		.cfi_endproc
 642              	.LFE137:
 644              		.section	.text.Error_Handler,"ax",%progbits
 645              		.align	1
 646              		.global	Error_Handler
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	Error_Handler:
 652              	.LFB140:
 251:Core/Src/main.c **** /* USER CODE END 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief  The application entry point.
 255:Core/Src/main.c ****   * @retval int
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** int main(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END 1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 266:Core/Src/main.c ****   HAL_Init();
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END Init */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* Configure the system clock */
 273:Core/Src/main.c ****   SystemClock_Config();
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE END SysInit */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* Initialize all configured peripherals */
 280:Core/Src/main.c ****   MX_GPIO_Init();
 281:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END 2 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* Infinite loop */
 286:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 287:Core/Src/main.c ****   while (1)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     if (isButtonClicked())
 290:Core/Src/main.c ****     {
 291:Core/Src/main.c ****       gpioToggle(LED);
 292:Core/Src/main.c ****     }
 293:Core/Src/main.c ****     /* USER CODE END WHILE */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 19


 298:Core/Src/main.c **** }
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****   * @brief System Clock Configuration
 302:Core/Src/main.c ****   * @retval None
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c **** void SystemClock_Config(void)
 305:Core/Src/main.c **** {
 306:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 307:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 310:Core/Src/main.c ****   */
 311:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 312:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 315:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 316:Core/Src/main.c ****   */
 317:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 318:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 325:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 331:Core/Src/main.c ****   */
 332:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 333:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 334:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 335:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 337:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     Error_Handler();
 342:Core/Src/main.c ****   }
 343:Core/Src/main.c **** }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** /* USER CODE END 4 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** /**
 350:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 351:Core/Src/main.c ****   * @retval None
 352:Core/Src/main.c ****   */
 353:Core/Src/main.c **** void Error_Handler(void)
 354:Core/Src/main.c **** {
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 20


 653              		.loc 1 354 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ Volatile: function does not return.
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 355:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 356:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 357:Core/Src/main.c ****   __disable_irq();
 659              		.loc 1 357 3 view .LVU187
 660              	.LBB4:
 661              	.LBI4:
 662              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 21


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 22


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 23


 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 24


 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 25


 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 26


 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 27


 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 28


 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 29


 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 30


 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 31


 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 32


 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 33


 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 34


 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 35


 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 36


 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 37


 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 663              		.loc 2 960 27 view .LVU188
 664              	.LBB5:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 665              		.loc 2 962 3 view .LVU189
 666              		.syntax unified
 667              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 668 0000 72B6     		cpsid i
 669              	@ 0 "" 2
 670              		.thumb
 671              		.syntax unified
 672              	.L57:
 673              	.LBE5:
 674              	.LBE4:
 358:Core/Src/main.c ****   while (1)
 675              		.loc 1 358 3 view .LVU190
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****   }
 676              		.loc 1 360 3 view .LVU191
 358:Core/Src/main.c ****   while (1)
 677              		.loc 1 358 9 view .LVU192
 678 0002 FEE7     		b	.L57
 679              		.cfi_endproc
 680              	.LFE140:
 682              		.section	.text.SystemClock_Config,"ax",%progbits
 683              		.align	1
 684              		.global	SystemClock_Config
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 689              	SystemClock_Config:
 690              	.LFB139:
 305:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 691              		.loc 1 305 1 view -0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 80
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695 0000 00B5     		push	{lr}
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 14, -4
 698 0002 95B0     		sub	sp, sp, #84
 699              		.cfi_def_cfa_offset 88
 306:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 700              		.loc 1 306 3 view .LVU194
 306:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 701              		.loc 1 306 22 is_stmt 0 view .LVU195
 702 0004 3022     		movs	r2, #48
 703 0006 0021     		movs	r1, #0
 704 0008 08A8     		add	r0, sp, #32
 705 000a FFF7FEFF 		bl	memset
 706              	.LVL69:
 307:Core/Src/main.c **** 
 707              		.loc 1 307 3 is_stmt 1 view .LVU196
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 38


 307:Core/Src/main.c **** 
 708              		.loc 1 307 22 is_stmt 0 view .LVU197
 709 000e 0023     		movs	r3, #0
 710 0010 0393     		str	r3, [sp, #12]
 711 0012 0493     		str	r3, [sp, #16]
 712 0014 0593     		str	r3, [sp, #20]
 713 0016 0693     		str	r3, [sp, #24]
 714 0018 0793     		str	r3, [sp, #28]
 311:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 715              		.loc 1 311 3 is_stmt 1 view .LVU198
 716              	.LBB6:
 311:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 717              		.loc 1 311 3 view .LVU199
 718 001a 0193     		str	r3, [sp, #4]
 311:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 719              		.loc 1 311 3 view .LVU200
 720 001c 1F4A     		ldr	r2, .L64
 721 001e 116C     		ldr	r1, [r2, #64]
 722 0020 41F08051 		orr	r1, r1, #268435456
 723 0024 1164     		str	r1, [r2, #64]
 311:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 724              		.loc 1 311 3 view .LVU201
 725 0026 126C     		ldr	r2, [r2, #64]
 726 0028 02F08052 		and	r2, r2, #268435456
 727 002c 0192     		str	r2, [sp, #4]
 311:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 728              		.loc 1 311 3 view .LVU202
 729 002e 019A     		ldr	r2, [sp, #4]
 730              	.LBE6:
 311:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 731              		.loc 1 311 3 view .LVU203
 312:Core/Src/main.c **** 
 732              		.loc 1 312 3 view .LVU204
 733              	.LBB7:
 312:Core/Src/main.c **** 
 734              		.loc 1 312 3 view .LVU205
 735 0030 0293     		str	r3, [sp, #8]
 312:Core/Src/main.c **** 
 736              		.loc 1 312 3 view .LVU206
 737 0032 1B4B     		ldr	r3, .L64+4
 738 0034 1A68     		ldr	r2, [r3]
 739 0036 42F44042 		orr	r2, r2, #49152
 740 003a 1A60     		str	r2, [r3]
 312:Core/Src/main.c **** 
 741              		.loc 1 312 3 view .LVU207
 742 003c 1B68     		ldr	r3, [r3]
 743 003e 03F44043 		and	r3, r3, #49152
 744 0042 0293     		str	r3, [sp, #8]
 312:Core/Src/main.c **** 
 745              		.loc 1 312 3 view .LVU208
 746 0044 029B     		ldr	r3, [sp, #8]
 747              	.LBE7:
 312:Core/Src/main.c **** 
 748              		.loc 1 312 3 view .LVU209
 317:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 749              		.loc 1 317 3 view .LVU210
 317:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 39


 750              		.loc 1 317 36 is_stmt 0 view .LVU211
 751 0046 0123     		movs	r3, #1
 752 0048 0893     		str	r3, [sp, #32]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 753              		.loc 1 318 3 is_stmt 1 view .LVU212
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 754              		.loc 1 318 30 is_stmt 0 view .LVU213
 755 004a 4FF48033 		mov	r3, #65536
 756 004e 0993     		str	r3, [sp, #36]
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 757              		.loc 1 319 3 is_stmt 1 view .LVU214
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 758              		.loc 1 319 34 is_stmt 0 view .LVU215
 759 0050 0223     		movs	r3, #2
 760 0052 0E93     		str	r3, [sp, #56]
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 761              		.loc 1 320 3 is_stmt 1 view .LVU216
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 762              		.loc 1 320 35 is_stmt 0 view .LVU217
 763 0054 4FF48002 		mov	r2, #4194304
 764 0058 0F92     		str	r2, [sp, #60]
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 765              		.loc 1 321 3 is_stmt 1 view .LVU218
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 766              		.loc 1 321 30 is_stmt 0 view .LVU219
 767 005a 0C22     		movs	r2, #12
 768 005c 1092     		str	r2, [sp, #64]
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 769              		.loc 1 322 3 is_stmt 1 view .LVU220
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 770              		.loc 1 322 30 is_stmt 0 view .LVU221
 771 005e 6022     		movs	r2, #96
 772 0060 1192     		str	r2, [sp, #68]
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 773              		.loc 1 323 3 is_stmt 1 view .LVU222
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 774              		.loc 1 323 30 is_stmt 0 view .LVU223
 775 0062 1293     		str	r3, [sp, #72]
 324:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 776              		.loc 1 324 3 is_stmt 1 view .LVU224
 324:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 777              		.loc 1 324 30 is_stmt 0 view .LVU225
 778 0064 0423     		movs	r3, #4
 779 0066 1393     		str	r3, [sp, #76]
 325:Core/Src/main.c ****   {
 780              		.loc 1 325 3 is_stmt 1 view .LVU226
 325:Core/Src/main.c ****   {
 781              		.loc 1 325 7 is_stmt 0 view .LVU227
 782 0068 08A8     		add	r0, sp, #32
 783 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 784              	.LVL70:
 325:Core/Src/main.c ****   {
 785              		.loc 1 325 6 discriminator 1 view .LVU228
 786 006e 88B9     		cbnz	r0, .L62
 332:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 787              		.loc 1 332 3 is_stmt 1 view .LVU229
 332:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 40


 788              		.loc 1 332 31 is_stmt 0 view .LVU230
 789 0070 0F23     		movs	r3, #15
 790 0072 0393     		str	r3, [sp, #12]
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 791              		.loc 1 334 3 is_stmt 1 view .LVU231
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 792              		.loc 1 334 34 is_stmt 0 view .LVU232
 793 0074 0223     		movs	r3, #2
 794 0076 0493     		str	r3, [sp, #16]
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 795              		.loc 1 335 3 is_stmt 1 view .LVU233
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 796              		.loc 1 335 35 is_stmt 0 view .LVU234
 797 0078 0023     		movs	r3, #0
 798 007a 0593     		str	r3, [sp, #20]
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 799              		.loc 1 336 3 is_stmt 1 view .LVU235
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800              		.loc 1 336 36 is_stmt 0 view .LVU236
 801 007c 4FF48052 		mov	r2, #4096
 802 0080 0692     		str	r2, [sp, #24]
 337:Core/Src/main.c **** 
 803              		.loc 1 337 3 is_stmt 1 view .LVU237
 337:Core/Src/main.c **** 
 804              		.loc 1 337 36 is_stmt 0 view .LVU238
 805 0082 0793     		str	r3, [sp, #28]
 339:Core/Src/main.c ****   {
 806              		.loc 1 339 3 is_stmt 1 view .LVU239
 339:Core/Src/main.c ****   {
 807              		.loc 1 339 7 is_stmt 0 view .LVU240
 808 0084 0321     		movs	r1, #3
 809 0086 03A8     		add	r0, sp, #12
 810 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 811              	.LVL71:
 339:Core/Src/main.c ****   {
 812              		.loc 1 339 6 discriminator 1 view .LVU241
 813 008c 20B9     		cbnz	r0, .L63
 343:Core/Src/main.c **** 
 814              		.loc 1 343 1 view .LVU242
 815 008e 15B0     		add	sp, sp, #84
 816              		.cfi_remember_state
 817              		.cfi_def_cfa_offset 4
 818              		@ sp needed
 819 0090 5DF804FB 		ldr	pc, [sp], #4
 820              	.L62:
 821              		.cfi_restore_state
 327:Core/Src/main.c ****   }
 822              		.loc 1 327 5 is_stmt 1 view .LVU243
 823 0094 FFF7FEFF 		bl	Error_Handler
 824              	.LVL72:
 825              	.L63:
 341:Core/Src/main.c ****   }
 826              		.loc 1 341 5 view .LVU244
 827 0098 FFF7FEFF 		bl	Error_Handler
 828              	.LVL73:
 829              	.L65:
 830              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 41


 831              	.L64:
 832 009c 00380240 		.word	1073887232
 833 00a0 00700040 		.word	1073770496
 834              		.cfi_endproc
 835              	.LFE139:
 837              		.section	.text.main,"ax",%progbits
 838              		.align	1
 839              		.global	main
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	main:
 845              	.LFB138:
 258:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 846              		.loc 1 258 1 view -0
 847              		.cfi_startproc
 848              		@ Volatile: function does not return.
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851 0000 08B5     		push	{r3, lr}
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 3, -8
 854              		.cfi_offset 14, -4
 266:Core/Src/main.c **** 
 855              		.loc 1 266 3 view .LVU246
 856 0002 FFF7FEFF 		bl	HAL_Init
 857              	.LVL74:
 273:Core/Src/main.c **** 
 858              		.loc 1 273 3 view .LVU247
 859 0006 FFF7FEFF 		bl	SystemClock_Config
 860              	.LVL75:
 280:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 861              		.loc 1 280 3 view .LVU248
 862 000a FFF7FEFF 		bl	MX_GPIO_Init
 863              	.LVL76:
 864              	.L67:
 287:Core/Src/main.c ****   {
 865              		.loc 1 287 3 view .LVU249
 289:Core/Src/main.c ****     {
 866              		.loc 1 289 5 view .LVU250
 289:Core/Src/main.c ****     {
 867              		.loc 1 289 9 is_stmt 0 view .LVU251
 868 000e FFF7FEFF 		bl	isButtonClicked
 869              	.LVL77:
 289:Core/Src/main.c ****     {
 870              		.loc 1 289 8 discriminator 1 view .LVU252
 871 0012 0028     		cmp	r0, #0
 872 0014 FBD0     		beq	.L67
 291:Core/Src/main.c ****     }
 873              		.loc 1 291 7 is_stmt 1 view .LVU253
 874 0016 0020     		movs	r0, #0
 875 0018 FFF7FEFF 		bl	gpioToggle
 876              	.LVL78:
 877 001c F7E7     		b	.L67
 878              		.cfi_endproc
 879              	.LFE138:
 881              		.section	.bss.isPressed.0,"aw",%nobits
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 42


 884              	isPressed.0:
 885 0000 00       		.space	1
 886              		.section	.bss.tick.1,"aw",%nobits
 887              		.align	2
 890              	tick.1:
 891 0000 00000000 		.space	4
 892              		.section	.bss.step.2,"aw",%nobits
 895              	step.2:
 896 0000 00       		.space	1
 897              		.text
 898              	.Letext0:
 899              		.file 3 "C:/Users/user/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 900              		.file 4 "C:/Users/user/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 901              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 902              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 903              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 904              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 905              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 906              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 907              		.file 11 "Core/Inc/gpio.h"
 908              		.file 12 "<built-in>"
ARM GAS  C:\Users\user\AppData\Local\Temp\cck9JZGr.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:21     .text.gpioWrite:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:27     .text.gpioWrite:00000000 gpioWrite
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:143    .text.gpioWrite:0000005c $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:149    .text.gpioRead:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:155    .text.gpioRead:00000000 gpioRead
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:236    .text.gpioRead:00000048 $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:242    .text.isButtonClicked:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:248    .text.isButtonClicked:00000000 isButtonClicked
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:272    .text.isButtonClicked:00000010 $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:526    .text.isButtonClicked:0000012c $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:895    .bss.step.2:00000000 step.2
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:890    .bss.tick.1:00000000 tick.1
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:884    .bss.isPressed.0:00000000 isPressed.0
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:533    .text.gpioToggle:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:539    .text.gpioToggle:00000000 gpioToggle
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:645    .text.Error_Handler:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:651    .text.Error_Handler:00000000 Error_Handler
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:683    .text.SystemClock_Config:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:689    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:832    .text.SystemClock_Config:0000009c $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:838    .text.main:00000000 $t
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:844    .text.main:00000000 main
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:885    .bss.isPressed.0:00000000 $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:887    .bss.tick.1:00000000 $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:896    .bss.step.2:00000000 $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:277    .text.isButtonClicked:00000015 $d
C:\Users\user\AppData\Local\Temp\cck9JZGr.s:277    .text.isButtonClicked:00000016 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
HAL_GetTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
